..   This page is autogenerated by pluginplay::document_module. Any changes made
..   to this document will be overwritten the next time it is generated.

#################
ASE(NWChem) : SCF
#################

Driver module for computing energies with NWChem through ASE.

***********
Please Cite
***********

No citations

**************
Property Types
**************

The following is a list of property types that this module satisfies.

- ``simde::TotalEnergy``

*************
Module Inputs
*************

This section details the full list of inputs that the module accepts. Inputs
that are not listed as optional must have their value set before the module can
be run. Inputs can be set manually by calling the module's ``change_input``
function or by passing arguments to a property type.

Quick Reference
===============

The following table provides a quick summary of the inputs available to this
module. The columns are:

- ``Key``: The key used to retrieve the option,
- ``Default`` : The initial value, if one exists, and
- ``Description`` : A human readable description of what the option is used for.

+-----------------+-----------------+------------------------------+
| Key             | Default         | Description                  |
+=================+=================+==============================+
| basis set       | N/A             | The atomic basis set to use. |
+-----------------+-----------------+------------------------------+
| Chemical System | N/A             | The chemical system          |
+-----------------+-----------------+------------------------------+
| method          | Pybind11 Object | The level of theory to use.  |
+-----------------+-----------------+------------------------------+


Detailed Descriptions
=====================

The following subsections provide detailed descriptions of each input recognized
by this module. The subsection headings are the name of the input. Within each
subsection we list:

- ``Description`` : A human readable description of what the option is used for.
- ``Default Value`` : The initial value, if one exists.
- ``Optional?`` : Whether the value must be set inorder for the module to run.
- ``Opaque?`` : Does the value of the input influence memoization?.
- ``Domain Restrictions`` : Criteria a value must obey to be deemed valid.

basis set
---------

- Description : The atomic basis set to use.
- Default Value : N/A
- Optional? : False
- Opaque? : True
- Domain Restrictions :

  - Type == pluginplay::python::PythonWrapper

Chemical System
---------------

- Description : The chemical system
- Default Value : N/A
- Optional? : False
- Opaque? : True
- Domain Restrictions :

  - Type == chemist::ChemicalSystem

method
------

- Description : The level of theory to use.
- Default Value : Pybind11 Object
- Optional? : False
- Opaque? : True
- Domain Restrictions :

  - Type == pluginplay::python::PythonWrapper


**************
Module Results
**************

This section tabulates the full list of results that the module returns. The
columns respectively are:

- Key: What the result is called
- Type: The C++ type of the result
- Description: What the result is/how it was computed.

.. note::

   A given property type will only return a subset of the available results. 
   Additional results can be accessed by using other property types or by using
   the Module class's advanced API.

+--------+-----------------------+---------------------+
| Key    | Type                  | Description         |
+========+=======================+=====================+
| Energy | tensorwrapper::Tensor | The computed energy |
+--------+-----------------------+---------------------+


**********
Submodules
**********

The module defines no submodules.

